으ㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓ파이썬어렵다ㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏ으ㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓ
#######중요! 알고리즘 과제는 notion에 있음!!! 적어도 하루에 1개는 끝내야 하고 나머지는 찬찬히 주말에라도 하기. 기한은 딱히 안정해져 있긴한데....아마 5월 29일까지?일듯
아 관통 프로젝트는 알고리즘 할 때는 안함. 아마 2월 14일에도 안할 가능성 농후함. 2월 18일 im테스트 삼성 으어ㅓㅓㅓㅓㅓㅓㅓㅓㅓㅓ말하너ㅏㅇ랑먼ㄹ머ㅣ아ㅓㄹ미
취직먼저 해서 싸피 벗어나자 제발!!!!!!!!!!!!!!!!! 될까....? 해봐야지 뭐.

목표- 논리적 사고력, 문제해결 능력 향상
-> 최종목표는 현실 세계 문제 해결
도구는 파이참+파이썬
aps(알고리즘 문제 해결)- 입출력을 제외한 내장함수 사용하지 않기
기본적인 내장함수의 동작원리 이해.
----좀 어렵겠는뎅

List 1-1
알고리즘
개념
- 어떠한 문제를 해결하기 위한 절차
- 유한한 단계를 통해 **문제를 해결하기 위한 절차나 방법**
- 주로 컴퓨터 용어로 쓰이며, 컴퓨터가 어떤 일을 수행하기 위한 단계적 방법
-----그러니까 어떤 문제가 있고 이를 해결하기 위한 절차라고 생각하면 편함.
알고리즘 표현 방법- 의사코드, 순서도
의사 코드
- 프로그램이 실행되기 전에 기계 코드로 번역될 필요가 있는 것
- 프로그램을 작성할 때 각 모듈이 작동하는 논리를 표현하기 위한 언어
- 특정 프로그래밍 언어의 문법에 따라 쓰인 것이 아니라, 일반적인 언어로 코드를 흉내 내어 알고리즘을 써놓은 코드
순서도- 어떠한 일을 처리하는 과정을 순서대로 간단한 기호와 도형으로 도식화한 것

APS과정의 목표 중 하나는 **알고리즘을 이해하고 활용하는 것**
좋은 알고리즘은
-정확성, 작업량, 메모리 사용량, 단순성, 최적성이 좋아야 한다.
다양한 알고리즘이 있긴 한데 일단은 파이참 사용.
많은 문제에서 성능 분석의 기준으로 알고리즘의 작업량을 비교
그리고 여러 알고리즘을 사용하여 비교할 필요 있다!
ex) 하나는 연산이 100번만에 나오는데 다른 것은 3번만에 나옴.그래서 여러 알고리즘 선택이 필요함.

시간복잡도
연산량을 확인, 알고리즘의 작업량을 표현 할 시 시간복잡도로 표현한다. 
그런데 컴퓨터 성능이나 os 성능에 따라 달라짐. 그래서 대략적인 비교라고 할 수 있음.
----뭐 그래프 같은데?

**빅-오 표기법 (Big-Oh Notation)**
- 시간 복잡도 함수 중에서 `가장 큰 영향력을 주는 n에 대한 항만을 표시`
- 계수(Coefficient)는 생략하여 표시
ex) O(3n +2) = O(3n) = O(n)-> 최고차항만 선택하고 계수 3제거

배열이란?
일정한 자료형의 변수들을 하나의 이름으로 열거하여 사용하는 자료구조
ex) num =[1, 2, 3} 이런거
배열의 필요성
- 프로그램 내에서 여러 개의 변수가 필요할 때, 일일이 다른 변수명을 이용하여 자료에 접근하는 것은 매우 비효율적일 수 있음
- 배열을 사용하면 하나의 선언을 통해서 둘 이상의 변수를 선언할 수 있음
- 단순히 다수의 변수 선언을 의미하는 것이 아니라, `다수의 변수로는 하기 힘든 작업을 배열을 활용해 쉽게 할 수 있음`
**1차원 배열의 선언과 접근**
- 선언
    - 별도의 선언 방법이 없으면 변수에 처음 값을 할당할 때 생성
arr = list()
arr = [ ]
arr = [0]*10
arr = [1,2,3]
접근- 
# 배열 Arr의 0번째 원소에 10을 저장하라
arr[0] = 10
# 배열 Arr의 idx번째 원소에 20을 저장하라
arr[idx] = 20
입력받은 정수를 1차원 배열에 저장 방법
-첫 줄에 양수의 개수 N이 주어진다
다음 줄에 빈칸으로 구분된 N개의 양수 Ai가 주어진다. 1<(이상기호)Ai<(이상기호)1000000
6-> N
275314-> 5개가 주어지니까
N = int(input())
arr = list(map(int,input.split()))
s= 0
for i in range(n)"
str+=x

**중요한 것은 그림그리면 설명할 정도로 공부해야함.!
정렬
- 2개 이상의 자료를 특정 기준에 의해 작은 값부터 큰 값(오름차순 : ascending), 
혹은 그 반대의 순서대로(내림차순 : descending) 재배열하는 것

- `키(key)`
    - 자료를 정렬하는 기준이 되는 특정 값

**대표적인 정렬 방식의 종류**

- `버블 정렬 (Bubble Sort)`
- 카운팅 정렬 (Counting Sort)
- `선택 정렬 (Selection Sort)`
- 퀵 정렬 (Quick Sort)
- 삽입 정렬 (Insertion Sort)
- 병합 정렬 (Merge Sort)

버블정렬
인접한 두개의 원소를 비교하며 자리를 계속 교환
O(n2)
정렬과정
1. 첫 번째 원소부터 인접한 원소끼리 계속 자리를 교환하면서 맨 마지막 자리까지 이동함
2. 한 단계가 끝나면 가장 큰 원소가 마지막 자리로 정렬됨
3. 교환하며 자리를 이동하는 모습이 물 위에 올라오는 거품 모양과 같다고 하여 버블 정렬이라고 함
--일단 이게 정렬과정인데 이렇게 됨
55 7 78 12 42
7 55 78 12 42
7 55 12 78 42
7 55 12 42 78 --->여기서 부터 다시 시작. 똑같은 방법으로
이렇게 진행됨
6
2 7 5 3 1 4
1.assert -> 정렬 시험할 때 답이 맞지 않으면 무조건 오류 내보냄
2. 에초에 인자에 값을 넣으면 나중에 입력할 필요 없이 바로 값이 나옴.