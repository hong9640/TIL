파이썬

str- 불변자료형, 서로 다른 따옴표로 안에  따옴표 출력 가능
list- 여러 개의 값을 순서대로 저장하는 변경 가능한 시퀀스 자료형
리스트는 대괄호로 표기, 어떤 자료형도 저장할 수 있다!!
그리고 리스트는 변경 가능
my_list = [1, 2, 3]
my_list[0] = 100
print(my_list)

이렇게!
파이썬 튜터 들어가면 하나씩 코드가 작성되는 게 나옴-pythontutor
튜플-리스트와 비슷 하지만 변경 불가능, 여러개의 값을 순서대로 저장하는 변경 불가능한 시퀀스 자료형
튜플은 () 소괄호 쓴다! 단일 튜플을 만들 때는 후행쉼표를 사용해야 함
튜플은 불변 특성을 사용해서 내부 동작과 안전한 데이터 전달에 사용됨
튜플 단일 요소를 만들 때는 반드시 후행 쉼표 해야 함! ex) my_tuple_2 = (1,) 1끝에 쉼표 붙음
다중 할당, 값 교환, 그룹화, 함수 다중 반환 값 등등
my_list = [1, 2, 3]
my_list[0] = 100
print(my_list)

my_tuple = (1, 2, 3) 
my_tuple[0] = 100 
print(my_list)
이 경우 리스트는 (100,2,3)이 출력되고 튜플은 오류 뜸! 리스트는 변경 가능한데 튜플은 변경이 불가능하기 때문임!

range는 연속된 정수 시퀀스를 생성하는 변경 불가능한 자료형-순서 있음
range(시작, 끝, 증가)
range(n)-0부터 n-1까지 1씩 증가
range(n, m)-n부터 m-1까지 1씩 증가
range(n,m,step)-n부터 m-1까지 step만큼 증가
# 음수 증가 시
# 시작 값이 끝 값보다 큰 경우 (정상)
print(list(range(5, 1, -1)))  # [5, 4, 3, 2]
# 시작 값이 끝 값보다 작은 경우
print(list(range(1, 5, -1)))  # []
이렇게 음수 증가 시 시작값이 끝 값보다 커야 함
양수 증가 시 시작값이 끝 값보다 작아야함
아니면 공백 나옴!
자세히 말하면 -1씩 감소해야 하는데 시작값이 1이니까 -1씩 감소하게 되면 0이 됨. 그래서 공백으로 나오는 것임!

range는 실제 값이 아니라 범위를 정의:
range 객체는 실제 값들을 메모리에 저장하는 것이 아니라, 값들을 "생성"하는 방법을 정의합니다.
예를 들어, range(1, 5)는 [1, 2, 3, 4]와 같은 실제 값들을 메모리에 저장하는 것이 아니라, 1에서 5 미만의 값을 생성하는 방법을 제공합니다.
r = range(1, 5)  # 실제 값이 아니라 "1부터 5미만까지의 값 생성 방법"
print(r)  # 출력: range(1, 5)
print(list(r))  # 출력: [1, 2, 3, 4]

메모리 효율성:
range 객체는 리스트처럼 모든 값을 메모리에 저장하지 않고, 필요할 때마다 값을 동적으로 생성합니다. 따라서 큰 범위의 숫자들을 다룰 때 메모리 효율성이 뛰어납니다.
예시:
r = range(1000000)
# 실제로 값들을 메모리에 저장하지 않음

range는 불변(immutable) 객체:
range는 불변(immutable) 객체로, 한번 생성된 후에는 요소를 변경할 수 없습니다. 하지만 range는 리스트나 튜플처럼 직접 수정할 수 있는 구조가 아니라 범위 자체만 정의하므로, 이를 수정하려고 하면 오류가 발생합니다.
r = range(1, 5)
r[0] = 100  # TypeError: 'range' object does not support item assignment

리스트는 **mutable(변경 가능)**하며, 요소를 추가, 수정, 삭제할 수 있습니다.
튜플은 **immutable(불변)**하며, 생성 후에는 수정할 수 없습니다.
**range**는 immutable 객체로, 수정할 수 없으며 메모리 효율적인 이너레이터입니다. range는 실제 값을 저장하지 않고 필요할 때마다 값을 생성하는 방식으로 동작합니다.
그리고 리스트의 인덱스가 3이다->[3:]이렇게 되야함. 인덱스니까!