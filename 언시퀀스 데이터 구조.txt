dict
.get
키 연결된 값을 반환 하거나 키가 없으면 none, 혹은 기본 값을 반환
.key
딕셔너리 키를 모은 객체를 반환
.setdefault
키와 연결된 값을 반환 키가 없다면 default와 연결한 키를 딕셔너리에 추가하고 default를 반환
세트
.add(x)
세트에 x를 추가
.remove(x)
세트에서 x를 제거
pop()
세트에서 임의의 요소를 제거하고 반환
discard-세트s에서 항목 x를 제거. remove와 달리 에러 없음
.update(iterable)
세트에 다른 이터러블 요소 추가

해시테이블- 해시 함수를 사용해서 변환한 값을 인덱스로 삼아 키와 데이터를 저장하는 자료 구조
데이터를 빠르게 저장하고 검색하기 위해 사용
키를 해시 함수를 통해 해시 값으로 변환
변환된 해시 값을 인덱스로 삼아 데이터를 저장하거나 찾음
이로 인해 검색, 삽입, 삭제가 매우 빠르게 수행
해시(hash)
해시에서 set은 순서 보장 안함
해시에서 dict는 set과 달리 삽입순서는 유지한다는 것이 언어 사양으로 보장 됨
키->해시함수->해시 값->해시 테이블에 저장

set의 pop은 임의의 요소를 제거하고 반환
무작위가 아니라 임의 라는 의미. 실행 때마다 다른 요소가 나올 수 있음. 단 정수는 해시 값이 항상 동일
파이썬을 동일 프로세스에서 연속 실행할 때는 결과가 어느 정도 일정해 보이기도 하지만, 여전히 set은 순서가 없음. 그래서 pop 되는 순서는 예측 불가능
hashable  필요한 이유
불변성을 통한 일관된 해시 값
안전성과 예측 가능성 유지
해시 테이블 기반 자료 구조 사용