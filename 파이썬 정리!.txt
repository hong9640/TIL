파이썬 정리!
1. 프로그램-새 연산을 정의하고 조합해 유용한 작업을 수행, 결국 문제를 해결하는 방법
  1)프로그램 작성-길을 적어주는 것
  2)프로그램 실행-글을 따라가는 것
  3)연산이 쌓여서 새로운 연산을 만들어냄

2. 파이썬-읽기 쉽고 쓰기 쉬운 문법
  1)세계적으로 풍부한 온라인 포럼 및 커뮤니티 생태계를 가지고 있음
  2)웹개발이나 데이터 분석, 인공지능 등 다양한 분야에서 사용
  3)직관적인 문법-이해하기 쉬움
  4)다양한 알고리즘 구현에 필요한 도구 제공
  5)알고리즘을 빠르게 테스트 하고 수정 가능

2-1.인터프리터-사람은 기계어 못 읽음. 그래서 인터프리터가 중간에서 언어를 바꿈
 파이썬 인터프리터 사용 방법-
   1) .py파일을 작성
   2) shell이란 프로그램으로 한번에 한 명령어씩 입력해서 실행">>>"이거 후에 입력
2-2.표현식-값으로 평가 될 수 있는 코드 조각
   1)값-표현식이 평가된 결과
     ex)3+5:표현식, 값:8
         1)표현식이 평가되어 값이 반환됨. 
         2)평가-표현식을 실행하여 값을 얻는 과정
         3)문장-실행 가능한 동작을 기술하는 코드(조건문, 반복문, 함수 정의 등)
         4)문장은 여러 개의 표현식을 포함
   2)타입- 변수나 값이 가질 수 있는 데이터의 종류를 의미->어떤 데이터인지, 어떻게 해석되고 처리되는지를 정의
   3)타입은 2가지 요소로 이루어 진다!!
     1)값
     2)값에 적용할 수 있는 연산
     3)데이터 타입에 맞는 연산 수행 가능 그 종류는 많음!
        ex)numeric type-int(정수), float(실수), complex(복소수)
            sequence types-list, tuple, rane
            non-sequence types-set, dict
            text sequence type-str(문자열)
            기타-boolean, none, functions
     4)타입은 '데이터 타입에 맞는 연산이 가능'하기 때문에 중요하다!!

2-3.산술연산자-+ (덧셈), - (뺄셈), * (곱셈), / (나눗셈), // (정수 나눗셈), % (나머지), ** (지수)연산자 
      1)우선순위-1. 지수(제곱근), 2. 음수부호, 3. 곱셈, 나눗셈,정수 나눗셈, 나머지, 4. 덧셈, 뺄셈
         ex) -2**4=-16 ->지수가 먼저임! 그래서 숫자 먼저 하고 음수 붙음.
2-4.변수-값을 저장하기 위한 이름 
2-5.변수할당-표현식을 통해 변수에 값을 저장
     ex)degrees = 36.5 변수 degrees에 값 36.5를 할당했다.
         1)그런데 이걸 읽을 때는 오른쪽에서 왼쪽으로 읽어야 함. 그니까 36.5를 degrees에 할당한거임!
         2) '='연산자는 '할당했다' 라는 뜻임. 절대 '같다'가 아님!! 더 간단하게 변수 degrees에 값 36.5을 저장한다 라는 의미!
            ex) degrees = 'abc'
                 -변수 degrees에 값 'abc'를 재할당했다. 즉 값이 바뀌었다.
            ex) variable = expression- 한당 연산자 오른쪽에 있는 표현식을 평가해서 값(메모리 주소)을 생성
                 -값의 메모리 주소를 왼쪽에 있는 변수에 저장. 즉, 오른쪽의 것은 값이 아니라 메모리 주소임!

2-6. 객체-값이 들어있는 상자, 타입을 갖는 메모리 주소 내 값
      1)일단은 오른쪽에 있는 것을 값이라고 이해해도 상관은 없음.
      2)단, 왼쪽의 변수가 오른쪽의 주소값을 가지고 있고 그 주소 안의 값을 참조하는 거임.
         ex) a=5-> a라는 변수에 5라는 값이 할당된다. 그리고 메모리 주소는 자동으로 생기는데 난수로 되게 길게 생성됨. 
                        그니까 신경 쓸 필요 없음. 그리고 변수 5는 생성된 메모리 주소 안에 저장되고 그 값이 들어있는 상자를 
                        객체라고 함.

         ex)number =10
             double =2* number
             print(double)-> 20   여기서 double은 20이라고 정의 됨

number=5
print(double)-> 20 number가 재할당 된거지 double의 값이 바뀐 것은 아님!

데이터 타입에 따라 적용 가능한 동작과 연산이 결정됨
데이터타입이 필요한 이유
1. 값들을 구분하고 어떻게 다뤄야 하는지 알 수 있음
2. 데이터 타입 값들에게도 각자에게 적합한 도구를 가짐
3. 잘못된 데이터 타입으로 인한 오류를 미리 예방

int-정수 자료형-정수 표현
2진수-0b
8진수-0o
16진수-0x->print(0x10) #16

float-실수 자료형 *complex는 안함 복소수인데 거의 안씀"
e, E를 사용해서 지수를 표현할 수 있음
314e=3.14
실수에 대한 근삿값
이진수나 2/3는 무한대로 늘어남. 그래서 근삿값까지만 표시
부동소수점 에러- 실수를 2진수로 변환하는 과정에서 발생하는 근사치 표현
해결법-Decimal('숫자')을 쓰면 됨. Decimal('숫자')-Decimal('숫자') 이렇게, 이 외에도 굉장히 많음

sezuence types
여러개의 값들을 순서대로 나열하여 저장하는 자료형-(str, list, tuple, range)
특징-순서. 순서는 정렬이 아니다!!
인덱싱-각 값에 고유한 인덱스를 가지고 있다.
슬라이싱-인덱스 범위를 조절해 부분적인 값을 추천
길이- len()함수를 사용하여 저장된 값의 개수를 구할 수 있음
반복- 반복문을 사용하여 저장된 값들을 반복적으로 처리할 수 있음
문자열-str
문자들의 순서가 있는 변경 불가능한 시퀀스 자료형
문자열은 작은따옴표 또는 큰따옴표로 감싸서 표현.
ex) print(type('Hello, World'))->str
그리고 앵간하면 작은따옴표로 하자
따옴표 안에 따옴표를 표현
작은따옴표가 들어 있는 경우는 큰 따옴표로 문자열 생성
큰따옴포가 들어있는 경우는 작은따옴표로 문자열생성
escape sequence=역슬래시 뒤에 특정 문자가 와서 특수한 기능을 함
\n바꿈, \t-탭, \\-백슬래시, \'-작은따옴표, \"- 큰 따옴표 \은 역슬래시임
string interpolation-문자열 내에 변수나 표현식을 삽입하는 방법
f-string
문자열 앞에 F또는f접두어를 붙이고 표현식을 {}로 작성
문자열에 파이썬 표현식의 값을 삽입할 수 있음
문자열 시퀸스-문자열[1] 하면 hello의 경우 e 출력

문자열 인덱스-양수와 음수 방향 다름
0 1 2 3 4
-5 -4 -3 -2 -1
이렇게

슬라이싱-시퀸스의 일부분을 선택하여 추출
배워서 기억함 [2:4]->이거는 2이상 4미만->4는 절대로 안씀!!
[:3]->얘는 0부터 2까지!, [0:5:2]->처음부터 4까지 그리고 2칸씩 띄워서 선택!
ex) [0:5:2]->0,2,4 이렇게 선택
[::-1]이거는 역순으로 1칸씩->-1 -2 -3 -4 -5

style guide-코드의 일관성과 가독성을 향상시키기 위한 규칙과 권장 사항들의 모음
1. 변수명은 직관적인 이름을 가져야 함
2. 공백 4칸을 사용하여 코드 블록을 들여쓰기
3. 한 줄의 길이는 79자로 제한하면, 길어질 경우 줄 바꿈을 사용
4. 문자와 밑즐을 사용하여 함수,변수, 속성의 이름을 작성
5. 변수명은 영문 알파벳, 언더스코어, 숫자로 구성. 그리고 숫자로 시작할 수 없고 대소문자 구분한다.
ctrl /를 하면 자동 참조!

공지사항
집 가서vscord icon 설치하기. 그럼 보기 편함


git
ls -a 누르면 코드 3개 나옴 여기서 .git이 있어 계속 기록을 하는 것.
mv 바꾸기전 파일 이름 바꾼 후 파일이름- 파일 이름 바꾸기

